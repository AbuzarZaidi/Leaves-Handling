{"version":3,"file":"static/js/162.6faeb60b.chunk.js","mappings":"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","sources":["api/employees.js","functions/employees.js","components/myLeaves/MyPreviousLeaves.jsx","pages/MyLeaves.jsx"],"sourcesContent":["import axios from \"axios\";\n// const url = process.env.REACT_APP_BACKEND_URL+\"/user\";\nconst url = \"https://leavesmanagement.herokuapp.com/user\"\n// const url = \"http://localhost:5000/user\";\n\nexport const myLeaves = (userId) => axios.post(`${url}/previosRequest`,{id:userId});\nexport const applyForLeave = (leave,userId) => axios.post(`${url}/leaveRequest`,{id:userId,data:leave});\nexport const getManagers=(id)=>axios.post(`${url}/getMangersName`,{id:id})\nexport const changePassword=(data,id)=>axios.patch(`${url}/passwordChange`,{id:id,data:data})","import * as api from \"../api/employees\";\r\nexport const getPreviousLeaves = async (userId) => {\r\n    try {\r\n      const result  = await api.myLeaves(userId);\r\n      return result.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };\r\n  export const createNewLeaveRequest = async (leave,userId) => {\r\n    try {\r\n      const result  = await api.applyForLeave(leave,userId);\r\n     \r\n      return result.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };\r\n  export const getManagers = async (id) => {\r\n    try {\r\n      const  result  = await api.getManagers(id);\r\n      return result.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };\r\n\r\n  export const changePassword = async (data,id) => {\r\n    try {\r\n      const  result  = await api.changePassword(data,id);\r\n      \r\n      return result.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };","import * as React from \"react\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  ExpandMoreIcon,\r\n  Typography,\r\n  Box,\r\n} from \"../../utlis/materialUIComponents\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nconst columns = [\r\n  { id: \"count\", label: \"#\", minWidth: 80 },\r\n  { id: \"name\", label: \"Name\", minWidth: 150 },\r\n  { id: \"reason\", label: \"Reason\", minWidth: 80, align: \"left\" },\r\n  {\r\n    id: \"fromDate\",\r\n    label: \"From\",\r\n    minWidth: 80,\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"toDate\",\r\n    label: \"To\",\r\n    minWidth: 80,\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"status\",\r\n    label: \"Status\",\r\n    minWidth: 100,\r\n    align: \"left\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst CustomWidthTooltip = styled(({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    maxWidth: 300,\r\n    backgroundColor: \"#ffffff\",\r\n    color:\"#000000\",\r\n    fontWeight:500,\r\n    fontSize:\"14px\",\r\n    padding: \"20px\",\r\n  },\r\n});\r\nconst MyLeavesDiv = styled(Paper)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    width: \"90%\",\r\n   \r\n  },\r\n}));\r\nconst MyPreviousLeaves = ({ myPreviousLeaves, userName, errorMessage,isLoading }) => {\r\n  return (\r\n    <>\r\n      <MyLeavesDiv sx={{ width: \"80%\", overflow: \"hidden\" }}>\r\n        <TableContainer sx={{ maxHeight: 440 }}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, fontWeight: 600 }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {myPreviousLeaves.length > 0 ? (\r\n                myPreviousLeaves.map((val, ind) => {\r\n                  return (\r\n                    <TableRow key={ind}>\r\n                      <TableCell id=\"count\" label=\"#\" sx={{ minWidth: 80 }}>\r\n                        {ind+1 }\r\n                      </TableCell>\r\n                      <TableCell id=\"name\" label=\"Name\" sx={{ minWidth: 170 }}>\r\n                        {userName}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id=\"reason\"\r\n                        label=\"From\"\r\n                        sx={{ minWidth: 80, textAlign: \"left\" }}\r\n                      >\r\n                        <div>\r\n                          <CustomWidthTooltip title={val.reason}>\r\n                            <Button sx={{ color: \"black\" }}>\r\n                              Detail <ExpandMoreIcon />\r\n                            </Button>\r\n                          </CustomWidthTooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id=\"fromDate\"\r\n                        label=\"#\"\r\n                        sx={{ minWidth: 80, textAlign: \"left\" }}\r\n                      >\r\n                        {val.fromDate}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id=\"toDate\"\r\n                        label=\"To\"\r\n                        sx={{ minWidth: 80, textAlign: \"left\" }}\r\n                      >\r\n                        {val.toDate}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id=\"status\"\r\n                        label=\"Status\"\r\n                        sx={{\r\n                          textTransform: \"capitalize\",\r\n                          fontSize: \"16px\",\r\n                          fontWeight: 600,\r\n                          minWidth: 100,\r\n                          textAlign: \"left\",\r\n                          color:\r\n                            val.status === \"approved\"\r\n                              ? \"green\"\r\n                              : val.status === \"pending\"\r\n                              ? \"orange\"\r\n                              : \"red\",\r\n                        }}\r\n                      >\r\n                        {val.status}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })\r\n              ) : (\r\n                <TableRow></TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {!isLoading&&myPreviousLeaves.length <= 0 ? (\r\n          <Box\r\n            sx={{ display: \"flex\", justifyContent: \"center\", fontWeight: 600 }}\r\n          >\r\n            \r\n            <Typography> {errorMessage.message===undefined?\"No data found\":errorMessage.message}</Typography>\r\n          </Box>\r\n          ) : (\r\n           \"\"\r\n         )} \r\n         {isLoading&& <Box\r\n            sx={{ display: \"flex\", justifyContent: \"center\", fontWeight: 600 }}\r\n          ><CircularProgress/></Box>}\r\n      </MyLeavesDiv>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPreviousLeaves;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MyPreviousLeaves from \"../components/myLeaves/MyPreviousLeaves\";\r\nimport { getPreviousLeaves } from \"../functions/employees\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box, Typography } from \"../utlis/materialUIComponents\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nconst Text = styled(Typography)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    fontSize: \"28px\",\r\n    paddingTop: \"8px\",\r\n  },\r\n}));\r\nconst Icon = styled(Typography)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    fontSize: \"20px\",\r\n  },\r\n}));\r\nconst LeavesBox = styled(Box)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    \r\n    width: \"100%\",\r\n  },\r\n}));\r\nconst MyLeaves = () => {\r\n  const id = useSelector((state) => state.authData.id);\r\n  const userName = useSelector((state) => state.authData.userName);\r\n  const [myLeaves, setMyLeaves] = useState([]);\r\n  const [resErrorMessage, setResErrorMessage] = useState(\"\");\r\n  const [isLoading,setIsLoading]=useState(false);\r\n  useEffect(() => {\r\n    const data = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const res = await getPreviousLeaves(id);\r\n\r\n        if (res) {\r\n          if (res.success) {\r\n           \r\n            setTimeout(() => {\r\n              setMyLeaves(res.data);\r\n              setIsLoading(false)\r\n            }, 1000);\r\n           \r\n          }\r\n        } else {\r\n          setIsLoading(false)\r\n          throw Error(\"No Data Found\");\r\n          \r\n        }\r\n      } catch (error) {\r\n        setResErrorMessage(error);\r\n        setIsLoading(false)\r\n      }\r\n    };\r\n    data();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}>\r\n        <Icon\r\n          variant=\"h4\"\r\n          gutterBottom\r\n          sx={{\r\n            fontFamily: \"Montserrat\",\r\n            fontWeight: 600,\r\n            fontSize: \"32px\",\r\n          }}\r\n        >\r\n          <img src=\"/icons/myLeaves.png\" alt=\"\" />\r\n        </Icon>\r\n\r\n        <Text\r\n          variant=\"h4\"\r\n          gutterBottom\r\n          sx={{\r\n            fontFamily: \"Montserrat\",\r\n            fontWeight: 600,\r\n            fontSize: \"32px\",\r\n            ml: 3,\r\n            mb: 4,\r\n          }}\r\n        >\r\n          My Leaves\r\n        </Text>\r\n      </Box>\r\n\r\n      <LeavesBox\r\n        sx={{ width: \"95%\", display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <MyPreviousLeaves\r\n          myPreviousLeaves={myLeaves}\r\n          userName={userName}\r\n          errorMessage={resErrorMessage}\r\n          isLoading={isLoading}\r\n        />\r\n      </LeavesBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyLeaves;\r\n"],"names":["url","myLeaves","userId","axios","id","applyForLeave","leave","data","getManagers","changePassword","getPreviousLeaves","api","result","response","createNewLeaveRequest","columns","label","minWidth","align","format","value","toLocaleString","toFixed","CustomWidthTooltip","styled","className","props","Tooltip","classes","popper","tooltipClasses","maxWidth","backgroundColor","color","fontWeight","fontSize","padding","MyLeavesDiv","Paper","theme","breakpoints","down","width","myPreviousLeaves","userName","errorMessage","isLoading","sx","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","length","val","ind","textAlign","title","reason","Button","ExpandMore","fromDate","toDate","textTransform","status","Box","display","justifyContent","Typography","undefined","message","CircularProgress","Text","paddingTop","Icon","LeavesBox","useSelector","state","authData","useState","setMyLeaves","resErrorMessage","setResErrorMessage","setIsLoading","useEffect","res","success","setTimeout","Error","mt","variant","gutterBottom","fontFamily","src","alt","ml","mb"],"sourceRoot":""}