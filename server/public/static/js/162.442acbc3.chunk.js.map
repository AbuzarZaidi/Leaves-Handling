{"version":3,"file":"static/js/162.442acbc3.chunk.js","mappings":"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","sources":["api/employees.js","functions/employees.js","components/myLeaves/MyPreviousLeaves.jsx","pages/MyLeaves.jsx"],"sourcesContent":["import axios from \"axios\";\n// const url = process.env.REACT_APP_BACKEND_URL+\"/user\";\nconst url = process.env.REACT_APP_USER_URL\nexport const myLeaves = (userId) => axios.post(`${url}/previosRequest`,{id:userId});\nexport const applyForLeave = (leave,userId) => axios.post(`${url}/leaveRequest`,{id:userId,data:leave});\nexport const getManagers=(id)=>axios.post(`${url}/getMangersName`,{id:id})\nexport const changePassword=(data,id)=>axios.patch(`${url}/passwordChange`,{id:id,data:data})","import * as api from \"../api/employees\";\r\nexport const getPreviousLeaves = async (userId) => {\r\n    try {\r\n      const result  = await api.myLeaves(userId);\r\n      return result.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };\r\n  export const createNewLeaveRequest = async (leave,userId) => {\r\n    try {\r\n      const result  = await api.applyForLeave(leave,userId);\r\n     \r\n      return result.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };\r\n  export const getManagers = async (id) => {\r\n    try {\r\n      const  result  = await api.getManagers(id);\r\n      return result.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };\r\n\r\n  export const changePassword = async (data,id) => {\r\n    try {\r\n      const  result  = await api.changePassword(data,id);\r\n      \r\n      return result.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };","import * as React from \"react\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  ExpandMoreIcon,\r\n  Typography,\r\n  Box,\r\n} from \"../../utlis/materialUIComponents\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nconst columns = [\r\n  { id: \"count\", label: \"#\", minWidth: 80 },\r\n  { id: \"name\", label: \"Name\", minWidth: 150 },\r\n  { id: \"reason\", label: \"Reason\", minWidth: 80, align: \"left\" },\r\n  {\r\n    id: \"fromDate\",\r\n    label: \"From\",\r\n    minWidth: 80,\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"toDate\",\r\n    label: \"To\",\r\n    minWidth: 80,\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"status\",\r\n    label: \"Status\",\r\n    minWidth: 100,\r\n    align: \"left\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst CustomWidthTooltip = styled(({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    maxWidth: 300,\r\n    backgroundColor: \"#0A1833\",\r\n    padding: \"20px\",\r\n  },\r\n});\r\n\r\nconst MyPreviousLeaves = ({ myPreviousLeaves, userName, errorMessage,isLoading }) => {\r\n  return (\r\n    <>\r\n      <Paper sx={{ width: \"80%\", overflow: \"hidden\" }}>\r\n        <TableContainer sx={{ maxHeight: 440 }}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, fontWeight: 600 }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {myPreviousLeaves.length > 0 ? (\r\n                myPreviousLeaves.map((val, ind) => {\r\n                  return (\r\n                    <TableRow key={ind}>\r\n                      <TableCell id=\"count\" label=\"#\" sx={{ minWidth: 80 }}>\r\n                        {ind + 1}\r\n                      </TableCell>\r\n                      <TableCell id=\"name\" label=\"Name\" sx={{ minWidth: 170 }}>\r\n                        {userName}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id=\"reason\"\r\n                        label=\"From\"\r\n                        sx={{ minWidth: 80, textAlign: \"left\" }}\r\n                      >\r\n                        <div>\r\n                          <CustomWidthTooltip title={val.reason}>\r\n                            <Button sx={{ color: \"black\" }}>\r\n                              Detail <ExpandMoreIcon />\r\n                            </Button>\r\n                          </CustomWidthTooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id=\"fromDate\"\r\n                        label=\"#\"\r\n                        sx={{ minWidth: 80, textAlign: \"left\" }}\r\n                      >\r\n                        {val.fromDate}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id=\"toDate\"\r\n                        label=\"To\"\r\n                        sx={{ minWidth: 80, textAlign: \"left\" }}\r\n                      >\r\n                        {val.toDate}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id=\"status\"\r\n                        label=\"Status\"\r\n                        sx={{\r\n                          textTransform: \"capitalize\",\r\n                          fontSize: \"16px\",\r\n                          fontWeight: 600,\r\n                          minWidth: 100,\r\n                          textAlign: \"left\",\r\n                          color:\r\n                            val.status === \"approved\"\r\n                              ? \"green\"\r\n                              : val.status === \"pending\"\r\n                              ? \"orange\"\r\n                              : \"red\",\r\n                        }}\r\n                      >\r\n                        {val.status}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })\r\n              ) : (\r\n                <TableRow></TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {!isLoading&&myPreviousLeaves.length <= 0 ? (\r\n          <Box\r\n            sx={{ display: \"flex\", justifyContent: \"center\", fontWeight: 600 }}\r\n          >\r\n            \r\n            <Typography> {errorMessage.message===undefined?\"No data found\":errorMessage.message}</Typography>\r\n          </Box>\r\n          ) : (\r\n           \"\"\r\n         )} \r\n         {isLoading&& <Box\r\n            sx={{ display: \"flex\", justifyContent: \"center\", fontWeight: 600 }}\r\n          ><CircularProgress/></Box>}\r\n      </Paper>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPreviousLeaves;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MyPreviousLeaves from \"../components/myLeaves/MyPreviousLeaves\";\r\nimport { getPreviousLeaves } from \"../functions/employees\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box, Typography } from \"../utlis/materialUIComponents\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nconst Text = styled(Typography)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    fontSize: \"25px\",\r\n    paddingTop: \"8px\",\r\n  },\r\n}));\r\nconst Icon = styled(Typography)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    fontSize: \"20px\",\r\n  },\r\n}));\r\nconst MyLeaves = () => {\r\n  const id = useSelector((state) => state.authData.id);\r\n  const userName = useSelector((state) => state.authData.userName);\r\n  const [myLeaves, setMyLeaves] = useState([]);\r\n  const [resErrorMessage, setResErrorMessage] = useState(\"\");\r\n  const [isLoading,setIsLoading]=useState(false);\r\n  useEffect(() => {\r\n    const data = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const res = await getPreviousLeaves(id);\r\n\r\n        if (res) {\r\n          if (res.success) {\r\n           \r\n            setTimeout(() => {\r\n              setMyLeaves(res.data);\r\n              setIsLoading(false)\r\n            }, 1000);\r\n           \r\n          }\r\n        } else {\r\n          setIsLoading(false)\r\n          throw Error(\"No Data Found\");\r\n          \r\n        }\r\n      } catch (error) {\r\n        setResErrorMessage(error);\r\n        setIsLoading(false)\r\n      }\r\n    };\r\n    data();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}>\r\n        <Icon\r\n          variant=\"h4\"\r\n          gutterBottom\r\n          sx={{\r\n            fontFamily: \"Montserrat\",\r\n            fontWeight: 600,\r\n            fontSize: \"32px\",\r\n          }}\r\n        >\r\n          <img src=\"/icons/myLeaves.png\" alt=\"\" />\r\n        </Icon>\r\n\r\n        <Text\r\n          variant=\"h4\"\r\n          gutterBottom\r\n          sx={{\r\n            fontFamily: \"Montserrat\",\r\n            fontWeight: 600,\r\n            fontSize: \"32px\",\r\n            ml: 3,\r\n            mb: 4,\r\n          }}\r\n        >\r\n          My Leaves\r\n        </Text>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{ width: \"95%\", ml: 3, display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <MyPreviousLeaves\r\n          myPreviousLeaves={myLeaves}\r\n          userName={userName}\r\n          errorMessage={resErrorMessage}\r\n          isLoading={isLoading}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyLeaves;\r\n"],"names":["url","process","REACT_APP_USER_URL","myLeaves","userId","axios","id","applyForLeave","leave","data","getManagers","changePassword","getPreviousLeaves","api","result","response","createNewLeaveRequest","columns","label","minWidth","align","format","value","toLocaleString","toFixed","CustomWidthTooltip","styled","className","props","Tooltip","classes","popper","tooltipClasses","maxWidth","backgroundColor","padding","myPreviousLeaves","userName","errorMessage","isLoading","Paper","sx","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","fontWeight","TableBody","length","val","ind","textAlign","title","reason","Button","color","ExpandMore","fromDate","toDate","textTransform","fontSize","status","Box","display","justifyContent","Typography","undefined","message","CircularProgress","Text","theme","breakpoints","down","paddingTop","Icon","useSelector","state","authData","useState","setMyLeaves","resErrorMessage","setResErrorMessage","setIsLoading","useEffect","res","success","setTimeout","Error","mt","variant","gutterBottom","fontFamily","src","alt","ml","mb"],"sourceRoot":""}