{"version":3,"file":"static/js/637.712305f9.chunk.js","mappings":"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","sources":["api/auth.js","functions/auth.js","pages/LoginPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\n// const url = process.env.REACT_APP_BACKEND_URL+\"/user\";\r\nconst url = \"https://leavesmanagement.herokuapp.com/user\"\r\n// const url = \"http://localhost:5000/user\";\r\nexport const login = (user) => axios.post(`${url}/login`,user);","import * as api from \"../api/auth\";\r\nexport const login = async (user) => {\r\n    try {\r\n      const response   = await api.login(user);\r\n      return response.data;\r\n    } catch (error) {\r\n      return (error.response.data);\r\n    }\r\n  };","import React, { useState,useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"../utlis/materialUIComponents\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setLoginHandler,\r\n  setIdHandler,\r\n  setNameHandler,\r\n  setTypeHandler,\r\n} from \"../store/auth\";\r\nconst { login } = require(\"../functions/auth\");\r\nconst InputField = styled(TextField)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n     width: \"100%\",\r\n  },\r\n}));\r\nconst LoginPage = () => {\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [isLoading,setIsLoading]=useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 1500);\r\n      }, [])\r\n  const loginHandler = async () => {\r\n    if (email && password) {\r\n      const user = {\r\n        email,\r\n        password,\r\n      };\r\n\r\n      const result = await login(user);\r\n\r\n      if (result.success) {\r\n        dispatch(setLoginHandler());\r\n        dispatch(setIdHandler(result.data.userId));\r\n        dispatch(setNameHandler(result.data.name));\r\n        dispatch(setTypeHandler(result.data.type));\r\n        navigate(\"/applyforleaves\");\r\n      } else {\r\n        setError(true);\r\n        setErrorMessage(result.message);\r\n      }\r\n    } else {\r\n      setError(true);\r\n      setErrorMessage(\"Please fill the form\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n     {isLoading?<Box sx={{display:\"flex\",\r\n  justifyContent:\"center\",\r\n  alignItems:\"center\",\r\n  minHeight:\"100vh\"}}>\r\n    <CircularProgress size=\"6rem\"/>\r\n    </Box>:\r\n      <Box\r\n        sx={{\r\n          backgroundImage: `url(/icons/LoginBackground.png)`,\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          alignItem: \"center\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <img src=\"/icons/logoforlogin.png\" alt=\"\" width=\"120px\" />\r\n          </Grid>\r\n\r\n          <Grid item xs={3} sx={{ display: \"flex\" }}>\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"Serpentine\",\r\n                fontWeight: 700,\r\n                fontSize: \"35px\",\r\n                color: \"#00A1BB\",\r\n                mr: 1,\r\n                mt: \"-20px\",\r\n              }}\r\n            >\r\n              Mikro\r\n            </Typography>\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"Serpentine\",\r\n                fontWeight: 700,\r\n                fontSize: \"35px\",\r\n                color: \"#00B7AD\",\r\n                ml: 0.5,\r\n                mt: \"-20px\",\r\n              }}\r\n            >\r\n              St\r\n            </Typography>\r\n            <img src=\"/icons/star.png\" alt=\"icon\" />\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"Serpentine\",\r\n                fontWeight: 700,\r\n                fontSize: \"35px\",\r\n                color: \"#00B7AD\",\r\n                ml: \"-10px\",\r\n                mt: \"-20px\",\r\n              }}\r\n            >\r\n              r\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3} sx={{ display: \"flex\", mb: 2 }}>\r\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", mt: \"-8px\" }}>\r\n              <img src=\"/icons/logoLine.png\" width=\"120px\" alt=\"icon\"></img>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"sen-serif\",\r\n                  fontWeight: 400,\r\n                  fontSize: \"11px\",\r\n                  color: \"#ffffff\",\r\n                  mt: \"-8px\",\r\n                }}\r\n              >\r\n                You name it, We make it\r\n              </Typography>\r\n            </Box>\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"Serpentine\",\r\n                fontWeight: 500,\r\n                fontSize: \"35px\",\r\n                color: \"#ffffff\",\r\n                mt: \"-20px\",\r\n              }}\r\n            >\r\n              Tech\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              gutterBottom\r\n              sx={{\r\n                fontFamily: \"Montserrat\",\r\n                fontWeight: 700,\r\n                fontSize: \"35px\",\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              LOG In\r\n            </Typography>\r\n          </Grid>\r\n          <form>\r\n            {error && (\r\n              <Box sx={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n                <Typography\r\n                  sx={{\r\n                    fontFamily: \"Montserrat\",\r\n                    fontWeight: 600,\r\n                    fontSize: \"14px\",\r\n                    color: \"#DC0000\",\r\n                  }}\r\n                >\r\n                  {errorMessage}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n            <Grid item xs={12} sx={{ mt: 3 }}>\r\n              <InputField \r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                id=\"email\"\r\n                // label=\"Email\"\r\n                placeholder=\"Email\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  backgroundColor: \"#ffffff\",\r\n                  width: \"450px\",\r\n                  borderRadius: 1,\r\n                  border: 1,\r\n                }}\r\n                onFocus={() => setError(false)}\r\n                required\r\n                autoComplete=\"true\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sx={{ mt: 3 }}>\r\n              <InputField \r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value={password}\r\n                id=\"outlined-required\"\r\n                // label=\"Password\"\r\n                required\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{\r\n                  backgroundColor: \"#ffffff\",\r\n                  width: \"450px\",\r\n                  \r\n                  borderRadius: 1,\r\n                }}\r\n                onFocus={() => setError(false)}\r\n                autoComplete=\"true\"\r\n              />\r\n            </Grid>\r\n          </form>\r\n          <Grid item xs={12} sx={{ mt: 3 }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                // backgroundColor: \"#00B2A9\",\r\n                color: \"#ffffff\",\r\n                width: \"240px\",\r\n                fontWeight: 600,\r\n                fontSize: \"16px\",\r\n                mt: 3,\r\n                textTransform: \"capitalize\",\r\n                border: 3,\r\n                borderColor: \"#00B2A9\",\r\n                \"&:hover\": {\r\n                  backgroundColor: \"#00AFFF\",\r\n                  border: 3,\r\n                  borderColor: \"#00AFFF\",\r\n                },\r\n              }}\r\n              onClick={loginHandler}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["login","user","axios","api","response","data","require","InputField","styled","TextField","theme","breakpoints","down","width","navigate","useNavigate","dispatch","useDispatch","useState","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","setTimeout","loginHandler","result","success","setLoginHandler","setIdHandler","userId","setNameHandler","name","setTypeHandler","type","message","sx","display","justifyContent","alignItems","minHeight","size","backgroundImage","backgroundPosition","backgroundRepeat","backgroundAttachment","height","alignItem","container","spacing","direction","style","item","xs","src","alt","fontFamily","fontWeight","fontSize","color","mr","mt","ml","mb","flexDirection","variant","gutterBottom","onChange","e","target","value","id","placeholder","backgroundColor","borderRadius","border","onFocus","required","autoComplete","textTransform","borderColor","onClick"],"sourceRoot":""}